// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Praktik_Work_2.Models;

public partial class Com_DataContext : DbContext
{
    public Com_DataContext(DbContextOptions<Com_DataContext> options)
        : base(options)
    {
    }

    public virtual DbSet<DataSoldier> DataSoldiers { get; set; }

    public virtual DbSet<Soldier> Soldiers { get; set; }

    public virtual DbSet<Subdivision> Subdivisions { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        optionsBuilder.UseSqlServer("Server=DESKTOP-U4QAS8P;Database=Com_Data;Trusted_Connection=true;MultipleActiveResultSets=true;TrustServerCertificate=True; encrypt=false");
    }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<DataSoldier>(entity =>
        {
            entity.HasKey(e => e.DataId);

            entity.Property(e => e.DataId).HasColumnName("dataID");
            entity.Property(e => e.AttitudeService)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("attitudeService");
            entity.Property(e => e.CharacterTraits)
                .IsRequired()
                .HasColumnName("characterTraits");
            entity.Property(e => e.CitizenProfession)
                .IsRequired()
                .HasColumnName("citizenProfession");
            entity.Property(e => e.Education).HasColumnName("education");
            entity.Property(e => e.ParentsAdress)
                .IsRequired()
                .HasColumnName("parentsAdress");
            entity.Property(e => e.PhoneNumber)
                .HasColumnType("decimal(11, 0)")
                .HasColumnName("phoneNumber");
            entity.Property(e => e.SoldierId).HasColumnName("SoldierID");

            entity.HasOne(d => d.Soldier).WithMany(p => p.DataSoldiers)
                .HasForeignKey(d => d.SoldierId)
                .HasConstraintName("FK_DataSoldiers_Soldiers");
        });

        modelBuilder.Entity<Soldier>(entity =>
        {
            entity.Property(e => e.SoldierId).HasColumnName("soldierID");
            entity.Property(e => e.DateBirth)
                .HasColumnType("date")
                .HasColumnName("dateBirth");
            entity.Property(e => e.DateGiveRank)
                .HasColumnType("date")
                .HasColumnName("dateGiveRank");
            entity.Property(e => e.DateMobilization)
                .HasColumnType("date")
                .HasColumnName("dateMobilization");
            entity.Property(e => e.DutyForm)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("dutyForm");
            entity.Property(e => e.Growth).HasColumnName("growth");
            entity.Property(e => e.Post)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("post");
            entity.Property(e => e.Rank)
                .IsRequired()
                .HasMaxLength(75)
                .HasColumnName("rank");
            entity.Property(e => e.SoldierName)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("soldierName");
            entity.Property(e => e.SoldierSurname)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("soldierSurname");
            entity.Property(e => e.SubdivisionId).HasColumnName("SubdivisionID");
            entity.Property(e => e.Weight).HasColumnName("weight");

            entity.HasOne(d => d.Subdivision).WithMany(p => p.Soldiers)
                .HasForeignKey(d => d.SubdivisionId)
                .HasConstraintName("FK_Soldiers_Subdivisions");
        });

        modelBuilder.Entity<Subdivision>(entity =>
        {
            entity.Property(e => e.SubdivisionId).HasColumnName("subdivisionID");
            entity.Property(e => e.DateAppear)
                .HasColumnType("date")
                .HasColumnName("dateAppear");
            entity.Property(e => e.SubdivisionCommander)
                .IsRequired()
                .HasMaxLength(75)
                .HasColumnName("subdivisionCommander");
            entity.Property(e => e.SubdivisionLocate)
                .IsRequired()
                .HasColumnName("subdivisionLocate");
            entity.Property(e => e.SubdivisionName)
                .IsRequired()
                .HasColumnName("subdivisionName");
            entity.Property(e => e.SubdivisionNumber).HasColumnName("subdivisionNumber");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}